clear all; clc;
% % delt2 400->0
muscles_tab = readtable('Muscles_tab.xlsx');
% muscles.names = table2array(muscles_tab(:,1));
muscles.F0M = str2double(table2array(muscles_tab(:,2)))*(-1);
muscles.L0M = str2double(table2array(muscles_tab(:,3)));
muscles.origin_body = table2array(muscles_tab(:,4));
muscles.origin = coords2arr(table2array(muscles_tab(:,5)));
muscles.insertion_body = table2array(muscles_tab(:,6));
muscles.insertion = coords2arr(table2array(muscles_tab(:,7)));
muscles.wrapping = table2array(muscles_tab(:,8));
% N_muscles = length(muscles.F0M);
syms  ms mh mc g c Ic Is Ih qq1 qq2 qq3 uu1 uu2 uu3 SC_ACx SC_ACy SC_ACz c_COMx c_COMy c_COMz AC_GHx AC_GHy AC_GHz s_COMx s_COMy s_COMz h_COMx h_COMy h_COMz t real
F_iso = sym('F_iso',[1 15]);
l0m = sym('l0m', [1 15]);
akt_sym = sym('akt_sym',[1 15]);
% data_sym = sym('data_sym');
q = [qq1 qq2 qq3 uu1 uu2 uu3];
% q_ID = [qq1 qq2 uu1 uu2 ddq1 ddq2];
koef_sym = [mc ms mh Ic Is Ih g c];
SC_AC = [SC_ACx SC_ACy SC_ACz];
c_COM = [c_COMx c_COMy c_COMz];
AC_GH = [AC_GHx AC_GHy AC_GHz];
s_COM = [s_COMx s_COMy s_COMz];
h_COM = [h_COMx h_COMy h_COMz];
parameters;
for i=1:15
    [muscle_len_vec(i),dir_vec(i,:)] = muscle_length(muscles.origin_body(i),muscles.insertion_body(i),muscles.origin(i,:),muscles.insertion(i,:),[qq1,qq2,qq3],muscles.wrapping(i),data);
    muscle_force_vec(i) = muscle_force(muscle_len_vec(i),F_iso(i), akt_sym(i), l0m(i));
end
% data;
jacob = simplify(jacobian(muscle_len_vec,[qq1,qq2,qq3])');
fe = [zeros(3,1);jacob*muscle_force_vec'];
% mm = [1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 1 0 0 0; 0 0 0 Ic + Ih + Is + mc.*(c_COMy.^2 + c_COMz.^2) + mh.*(AC_GHy.^2 + AC_GHy.*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)) + AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) + AC_GHz.^2 - AC_GHz.*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2)) - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + SC_ACy.^2 + SC_ACy.*(AC_GHy.*cos(qq2) - AC_GHz.*sin(qq2)) + SC_ACy.*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) + SC_ACz.^2 - SC_ACz.*(-AC_GHy.*sin(qq2) - AC_GHz.*cos(qq2)) - SC_ACz.*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) + h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMy.*(SC_ACy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - SC_ACz.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2))) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3)) - h_COMz.*(SC_ACy.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)) - SC_ACz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)))) + ms.*(SC_ACy.^2 + SC_ACy.*(s_COMy.*cos(qq2) - s_COMz.*sin(qq2)) + SC_ACz.^2 - SC_ACz.*(-s_COMy.*sin(qq2) - s_COMz.*cos(qq2)) + s_COMy.^2 + s_COMy.*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)) + s_COMz.^2 - s_COMz.*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2))) Ih + Is + mh.*(AC_GHy.^2 + AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) + AC_GHz.^2 - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + SC_ACy.*(AC_GHy.*cos(qq2) - AC_GHz.*sin(qq2)) + SC_ACy.*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) - SC_ACz.*(-AC_GHy.*sin(qq2) - AC_GHz.*cos(qq2)) - SC_ACz.*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) + h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3))) + ms.*(SC_ACy.*(s_COMy.*cos(qq2) - s_COMz.*sin(qq2)) - SC_ACz.*(-s_COMy.*sin(qq2) - s_COMz.*cos(qq2)) + s_COMy.^2 + s_COMz.^2) Ih + mh.*(AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + SC_ACy.*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) - SC_ACz.*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) + h_COMy.^2 + h_COMz.^2); 0 0 0 Ih + Is + mh.*(AC_GHy.^2 + AC_GHy.*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)) + AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) + AC_GHz.^2 - AC_GHz.*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2)) - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMy.*(SC_ACy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - SC_ACz.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2))) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3)) - h_COMz.*(SC_ACy.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)) - SC_ACz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)))) + ms.*(s_COMy.^2 + s_COMy.*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)) + s_COMz.^2 - s_COMz.*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2))) Ih + Is + mh.*(AC_GHy.^2 + AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) + AC_GHz.^2 - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3))) + ms.*(s_COMy.^2 + s_COMz.^2) Ih + mh.*(AC_GHy.*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)) - AC_GHz.*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)) + h_COMy.^2 + h_COMz.^2); 0 0 0 Ih + mh.*(h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMy.*(SC_ACy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - SC_ACz.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2))) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3)) - h_COMz.*(SC_ACy.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)) - SC_ACz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)))) Ih + mh.*(h_COMy.^2 + h_COMy.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)) + h_COMz.^2 - h_COMz.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3))) Ih + mh.*(h_COMy.^2 + h_COMz.^2)];
% fo = [uu1; uu2; uu3; -AC_GHy.*g.*mh.*(-sin(qq1).*cos(qq2) - sin(qq2).*cos(qq1)) - AC_GHy.*mh.*(uu1 + uu2).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2)) + AC_GHz.*g.*mh.*(-sin(qq1).*sin(qq2) + cos(qq1).*cos(qq2)) - AC_GHz.*mh.*(uu1 + uu2).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) + SC_ACy.*g.*mh.*sin(qq1) + SC_ACy.*g.*ms.*sin(qq1) - SC_ACy.*mh.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)) - SC_ACy.*ms.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)) + SC_ACz.*g.*mh.*cos(qq1) + SC_ACz.*g.*ms.*cos(qq1) - SC_ACz.*mh.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)) - SC_ACz.*ms.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)) - c.*uu1 + c_COMy.*g.*mc.*sin(qq1) + c_COMz.*g.*mc.*cos(qq1) - g.*h_COMy.*mh.*(-(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*sin(qq1) + (-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)).*cos(qq1)) + g.*h_COMz.*mh.*((-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*cos(qq1) - (sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)).*sin(qq1)) - g.*ms.*s_COMy.*(-sin(qq1).*cos(qq2) - sin(qq2).*cos(qq1)) + g.*ms.*s_COMz.*(-sin(qq1).*sin(qq2) + cos(qq1).*cos(qq2)) + h_COMy.*mh.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3)).*(uu1 + uu2 + uu3).^2 + h_COMy.*mh.*(SC_ACy.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)) - SC_ACz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))).*(uu1 + uu2 + uu3).^2 + h_COMz.*mh.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)).*(uu1 + uu2 + uu3).^2 + h_COMz.*mh.*(SC_ACy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - SC_ACz.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2))).*(uu1 + uu2 + uu3).^2 + mh.*uu1.*(-AC_GHy.*sin(qq2) - AC_GHz.*cos(qq2)).*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)) - mh.*uu1.*(AC_GHy.*cos(qq2) - AC_GHz.*sin(qq2)).*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)) + mh.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)).*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) - mh.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)).*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) + mh.*(uu1 + uu2).*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2)).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) - mh.*(uu1 + uu2).*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2)) + mh.*(uu1 + uu2).*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) - mh.*(uu1 + uu2).*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2)) + ms.*s_COMy.*(uu1 + uu2).^2.*(SC_ACy.*sin(qq2) - SC_ACz.*cos(qq2)) + ms.*s_COMz.*(uu1 + uu2).^2.*(SC_ACy.*cos(qq2) + SC_ACz.*sin(qq2)) + ms.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)).*(-s_COMy.*sin(qq2) - s_COMz.*cos(qq2)) - ms.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)).*(s_COMy.*cos(qq2) - s_COMz.*sin(qq2)); -AC_GHy.*g.*mh.*(-sin(qq1).*cos(qq2) - sin(qq2).*cos(qq1)) - AC_GHy.*mh.*(uu1 + uu2).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2)) + AC_GHz.*g.*mh.*(-sin(qq1).*sin(qq2) + cos(qq1).*cos(qq2)) - AC_GHz.*mh.*(uu1 + uu2).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) - c.*uu2 - g.*h_COMy.*mh.*(-(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*sin(qq1) + (-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)).*cos(qq1)) + g.*h_COMz.*mh.*((-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*cos(qq1) - (sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)).*sin(qq1)) - g.*ms.*s_COMy.*(-sin(qq1).*cos(qq2) - sin(qq2).*cos(qq1)) + g.*ms.*s_COMz.*(-sin(qq1).*sin(qq2) + cos(qq1).*cos(qq2)) + h_COMy.*mh.*(AC_GHy.*sin(qq3) - AC_GHz.*cos(qq3)).*(uu1 + uu2 + uu3).^2 + h_COMz.*mh.*(AC_GHy.*cos(qq3) + AC_GHz.*sin(qq3)).*(uu1 + uu2 + uu3).^2 + mh.*uu1.*(-AC_GHy.*sin(qq2) - AC_GHz.*cos(qq2)).*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)) - mh.*uu1.*(AC_GHy.*cos(qq2) - AC_GHz.*sin(qq2)).*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)) + mh.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)).*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) - mh.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)).*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) + mh.*(uu1 + uu2).*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) - mh.*(uu1 + uu2).*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2)) + ms.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)).*(-s_COMy.*sin(qq2) - s_COMz.*cos(qq2)) - ms.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)).*(s_COMy.*cos(qq2) - s_COMz.*sin(qq2)); -c.*uu3 - g.*h_COMy.*mh.*(-(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*sin(qq1) + (-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)).*cos(qq1)) + g.*h_COMz.*mh.*((-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)).*cos(qq1) - (sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2)).*sin(qq1)) + mh.*uu1.*(c_COMy.*uu1 + uu1.*(SC_ACy - c_COMy)).*(h_COMy.*(-sin(qq2).*cos(qq3) - sin(qq3).*cos(qq2)) - h_COMz.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3))) - mh.*uu1.*(-c_COMz.*uu1 - uu1.*(SC_ACz - c_COMz)).*(h_COMy.*(-sin(qq2).*sin(qq3) + cos(qq2).*cos(qq3)) - h_COMz.*(sin(qq2).*cos(qq3) + sin(qq3).*cos(qq2))) + mh.*(uu1 + uu2).*(-h_COMy.*sin(qq3) - h_COMz.*cos(qq3)).*(s_COMy.*(uu1 + uu2) + (AC_GHy - s_COMy).*(uu1 + uu2)) - mh.*(uu1 + uu2).*(h_COMy.*cos(qq3) - h_COMz.*sin(qq3)).*(-s_COMz.*(uu1 + uu2) - (AC_GHz - s_COMz).*(uu1 + uu2))];
% % % torque = mm(3:end,3:end)*[ddq1;ddq2]-fo(3:end)-fe(3:end);
% react_angle = reaction_angle(q,akt_sym,params,muscles);
% % 
% % % 
% matlabFunction(mm,'file','MM','vars',{t,q',koef_sym,SC_AC,c_COM,AC_GH,s_COM,h_COM})
% matlabFunction(fo,'file','FO','vars',{t,q',koef_sym,SC_AC,c_COM,AC_GH,s_COM,h_COM})
matlabFunction(fe,'file','FE','vars',{t,q',F_iso,l0m,akt_sym})
% matlabFunction(react_angle,'file','phi_react','vars',{q,akt_sym,data_sym})
% matlabFunction(dq,'file','ODE_sim','vars',{t,q',koef,coords,F_iso,l0m,akt})
% matlabFunction(torque,'file','Inverse_dyn','vars',{t,q_ID',koef,coords,F_iso,l0m,akt})

function t = coords2arr(coords)
    t = zeros(length(coords),3);
    for i = 1:length(coords)
        t(i,:) = str2num(coords{i});
    end
end
